name: Notify Discord on change

on:
  - push
  - create
  - delete
  - fork
  - issue_comment
  - issues
  - label
  - pull_request

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (for jq availability in runner)
        uses: actions/checkout@v4

      - name: Prepare variables
        shell: bash
        run: |
          set -euo pipefail
          EVENT_JSON="$GITHUB_EVENT_PATH"

          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          BRANCH="${GITHUB_REF_NAME:-${{ github.ref_name }}}"

          # Get commits array length (0 if not push)
          COMMIT_COUNT=$(jq '.commits | length' "$EVENT_JSON")
          
          # Build commit list (hash + message)
          if [ "$COMMIT_COUNT" -gt 0 ]; then
            COMMITS_TEXT=$(jq -r '.commits[] | "\(.id[0:7]) \(.message)"' "$EVENT_JSON" | sed 's/"/\\"/g')
            LATEST_SHA=$(jq -r '.commits[-1].id' "$EVENT_JSON")
          else
            COMMITS_TEXT="No commits found for this event."
            LATEST_SHA=$(jq -r '.head_commit.id // .after // ""' "$EVENT_JSON")
          fi

          # Determine button URL (link to latest commit or repo)
          if [ -n "$LATEST_SHA" ] && [ "$LATEST_SHA" != "null" ]; then
            BUTTON_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/$LATEST_SHA"
          else
            BUTTON_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
          fi

          # Author info (prefer commit author if available)
          COMMIT_AUTHOR_NAME="$(jq -r '.head_commit.author.name // ""' "$EVENT_JSON")"
          COMMIT_AUTHOR_USERNAME="$(jq -r '.head_commit.author.username // ""' "$EVENT_JSON")"
          if [ -n "$COMMIT_AUTHOR_NAME" ]; then
            AUTHOR="$COMMIT_AUTHOR_NAME"
          else
            AUTHOR="${{ github.actor }}"
          fi
          if [ -n "$COMMIT_AUTHOR_USERNAME" ]; then
            AUTHOR_USERNAME="$COMMIT_AUTHOR_USERNAME"
          else
            AUTHOR_USERNAME="${{ github.actor }}"
          fi
          AUTHOR_ICON="https://github.com/$AUTHOR_USERNAME.png"

          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "COMMIT_COUNT=$COMMIT_COUNT" >> $GITHUB_ENV
          echo "COMMITS_TEXT=$COMMITS_TEXT" >> $GITHUB_ENV
          echo "BUTTON_URL=$BUTTON_URL" >> $GITHUB_ENV
          echo "AUTHOR=$AUTHOR" >> $GITHUB_ENV
          echo "AUTHOR_ICON=$AUTHOR_ICON" >> $GITHUB_ENV

      - name: Build payload with all commits
        run: |
          python3 - <<'PY' > payload.json
          import json, os

          commit_count = int(os.getenv("COMMIT_COUNT", "0"))
          commit_label = f"{commit_count} new commit" + ("" if commit_count == 1 else "s")
          title = f"[{os.getenv('REPO_NAME')}:{os.getenv('BRANCH')}] {commit_label}"
          description = os.getenv("COMMITS_TEXT", "No commits found.")

          payload = {
              "embeds": [
                  {
                      "author": {
                          "name": os.getenv("AUTHOR", ""),
                          "icon_url": os.getenv("AUTHOR_ICON", "")
                      },
                      "title": title,
                      "description": description,
                      "url": os.getenv("BUTTON_URL", ""),
                      "color": 8022983
                  }
              ],
              "components": [
                  {
                      "type": 1,
                      "components": [
                          {
                              "type": 2,
                              "style": 5,
                              "url": os.getenv("BUTTON_URL", ""),
                              "label": "View Commit",
                              "disabled": False
                          }
                      ]
                  }
              ]
          }
          print(json.dumps(payload))
          PY

      - name: Send to Discord webhook
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          if [ -z "${WEBHOOK:-}" ]; then
            echo "Missing DISCORD_WEBHOOK_URL secret" >&2
            exit 1
          fi
          http_status=$(curl -sS -X POST \
            -H "Content-Type: application/json" \
            --data-binary @payload.json \
            "$WEBHOOK" -w "%{http_code}" -o /tmp/discord_resp.txt) || true
          echo "Discord response (body):"
          if [ -s /tmp/discord_resp.txt ]; then
            cat /tmp/discord_resp.txt || true
          else
            echo "(no body)"
          fi
          echo "HTTP status: $http_status"
          if [ "$http_status" -ge 400 ]; then
            exit 1
          fi
